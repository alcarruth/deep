// Generated by CoffeeScript 2.5.1
(function() {
  //!/usr/bin/env coffee

  var JSON_File, Package_File, deep, fs, path,
    boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } };

  fs = require('fs');

  path = require('path');

  ({JSON_File} = require('./json_file'));

  deep = require('./deep');

  Package_File = class Package_File extends JSON_File {
    constructor(fname, defalt = null) {
      super(fname);
      this.load = this.load.bind(this);
      this.defalt = defalt;
    }

    load() {
      boundMethodCheck(this, Package_File);
      if (fs.existsSync(this.fname)) {
        return super.load(this.fname);
      } else if (this.defalt) {
        return super.load(this.defalt);
      }
    }

  };

  exports.Package_File = Package_File;

  exports.JSON_File = JSON_File;

}).call(this);
